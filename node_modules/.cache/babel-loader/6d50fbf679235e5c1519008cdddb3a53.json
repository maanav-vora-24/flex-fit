{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\project_fitness_app\\\\src\\\\components\\\\Exercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { ScrollMenu } from 'react-horizontal-scrolling-menu';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exercises = _ref => {\n  _s();\n\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentExercises, setCurrentExercises] = useState([]);\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n\n      setExercises(exercisesData);\n      setCurrentExercises(exercisesData.slice(0, 20)); // Limit for performance\n    };\n\n    fetchExercisesData();\n  }, [bodyPart, setExercises]);\n  if (!currentExercises.length) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"exercises\",\n    className: \"mt-[50px] lg:mt-[109px] px-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-[30px] lg:text-[44px] font-bold mb-[46px] text-black\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      children: currentExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"div\", {\n        itemId: exercise.id,\n        title: exercise.name,\n        className: \"mx-5 inline-block\",\n        children: /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          exercise: exercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, exercise.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exercises, \"MlDW/rvdVPczzC8ZL3K4MaSx4W4=\");\n\n_c = Exercises;\nexport default Exercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/project_fitness_app/src/components/Exercises.js"],"names":["React","useEffect","useState","Typography","ScrollMenu","exerciseOptions","fetchData","ExerciseCard","Loader","Exercises","exercises","setExercises","bodyPart","currentExercises","setCurrentExercises","fetchExercisesData","exercisesData","slice","length","map","exercise","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,iCAA3B;AAEA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,SAAS,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,GAA0C;AAC3D,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,kBAAkB,GAAG,YAAY;AACrC,UAAIC,aAAa,GAAG,EAApB;;AAEA,UAAIJ,QAAQ,KAAK,KAAjB,EAAwB;AACtBI,QAAAA,aAAa,GAAG,MAAMV,SAAS,CAC7B,6CAD6B,EAE7BD,eAF6B,CAA/B;AAID,OALD,MAKO;AACLW,QAAAA,aAAa,GAAG,MAAMV,SAAS,CAC5B,wDAAuDM,QAAS,EADpC,EAE7BP,eAF6B,CAA/B;AAID;;AAEDM,MAAAA,YAAY,CAACK,aAAD,CAAZ;AACAF,MAAAA,mBAAmB,CAACE,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAAD,CAAnB,CAhBqC,CAgBY;AAClD,KAjBD;;AAmBAF,IAAAA,kBAAkB;AACnB,GArBQ,EAqBN,CAACH,QAAD,EAAWD,YAAX,CArBM,CAAT;AAuBA,MAAI,CAACE,gBAAgB,CAACK,MAAtB,EAA8B,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAE9B,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,SAAS,EAAC,8BAA9B;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,2DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAA,gBACGL,gBAAgB,CAACM,GAAjB,CAAsBC,QAAD,iBACpB;AAEE,QAAA,MAAM,EAAEA,QAAQ,CAACC,EAFnB;AAGE,QAAA,KAAK,EAAED,QAAQ,CAACE,IAHlB;AAIE,QAAA,SAAS,EAAC,mBAJZ;AAAA,+BAME,QAAC,YAAD;AAAc,UAAA,QAAQ,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA;AANF,SACOA,QAAQ,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhDD;;GAAMZ,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { ScrollMenu } from 'react-horizontal-scrolling-menu';\n\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport Loader from './Loader';\n\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\n  const [currentExercises, setCurrentExercises] = useState([]);\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData(\n          'https://exercisedb.p.rapidapi.com/exercises',\n          exerciseOptions\n        );\n      } else {\n        exercisesData = await fetchData(\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\n          exerciseOptions\n        );\n      }\n\n      setExercises(exercisesData);\n      setCurrentExercises(exercisesData.slice(0, 20)); // Limit for performance\n    };\n\n    fetchExercisesData();\n  }, [bodyPart, setExercises]);\n\n  if (!currentExercises.length) return <Loader />;\n\n  return (\n    <div id=\"exercises\" className=\"mt-[50px] lg:mt-[109px] px-5\">\n      <h2 className=\"text-[30px] lg:text-[44px] font-bold mb-[46px] text-black\">\n        Showing Results\n      </h2>\n\n      <ScrollMenu>\n        {currentExercises.map((exercise) => (\n          <div\n            key={exercise.id}\n            itemId={exercise.id}\n            title={exercise.name}\n            className=\"mx-5 inline-block\"\n          >\n            <ExerciseCard exercise={exercise} />\n          </div>\n        ))}\n      </ScrollMenu>\n    </div>\n  );\n};\n\nexport default Exercises;\n"]},"metadata":{},"sourceType":"module"}