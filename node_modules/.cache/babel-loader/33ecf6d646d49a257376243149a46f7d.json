{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\project_fitness_app\\\\src\\\\components\\\\SearchExercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchData, exerciseOptions } from '../utils/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchExercises = _ref => {\n  _s();\n\n  let {\n    setBodyPart,\n    bodyPart\n  } = _ref;\n  const [search, setSearch] = useState('');\n  const [bodyParts, setBodyParts] = useState([]);\n  const [allExercises, setAllExercises] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      const bodyPartsData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exerciseOptions);\n      const exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      console.log('Exercise count:', exercisesData.length);\n      setBodyParts(['all', ...bodyPartsData]);\n      setAllExercises(exercisesData);\n    };\n\n    fetchInitialData();\n  }, [setBodyPart]);\n  useEffect(() => {\n    const input = search.trim().toLowerCase();\n\n    if (!input) {\n      setSuggestions([]);\n      return;\n    }\n\n    const sorted = allExercises.filter(ex => ex.name.toLowerCase().includes(input)).sort((a, b) => {\n      const aName = a.name.toLowerCase();\n      const bName = b.name.toLowerCase();\n      const aScore = aName === input ? 3 : aName.startsWith(input) ? 2 : 1;\n      const bScore = bName === input ? 3 : bName.startsWith(input) ? 2 : 1;\n      return bScore - aScore;\n    });\n    setSuggestions(sorted.slice(0, 5));\n  }, [search, allExercises]);\n\n  const handleSearch = () => {\n    if (!search.trim()) return;\n\n    if (suggestions.length > 0) {\n      navigate(`/exercise/${suggestions[0].id}`);\n      setSearch('');\n      setSuggestions([]);\n    } else {\n      alert('No matching exercise found.');\n    }\n  };\n\n  const handleSuggestionClick = exercise => {\n    navigate(`/exercise/${exercise.id}`);\n    setSearch('');\n    setSuggestions([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center px-5 py-8 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-[30px] lg:text-[44px] font-bold text-center mb-12\",\n      children: [\"Awesome Exercises You \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this), \" Should Know\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mb-20 w-full max-w-[1170px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Exercises\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSearch(),\n        className: \"w-full h-[56px] lg:h-[76px] px-4 pr-[180px] rounded-full border border-gray-300 text-lg font-semibold focus:outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSearch,\n        className: \"absolute right-0 top-0 h-[56px] lg:h-[76px] w-[80px] lg:w-[173px] bg-blue-600 text-white text-sm lg:text-lg rounded-r-full hover:bg-blue-700 transition-all\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"absolute z-50 w-full bg-white border border-gray-200 mt-2 rounded-xl max-h-60 overflow-y-auto shadow-lg\",\n        children: suggestions.map(exercise => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleSuggestionClick(exercise),\n            className: \"w-full text-left px-4 py-3 cursor-pointer hover:bg-blue-100 transition\",\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, exercise.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-5 flex flex-wrap gap-4 justify-center\",\n      children: bodyParts.map(item => {\n        const isActive = bodyPart === item;\n        const buttonClass = isActive ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-200 text-black hover:bg-blue-100';\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setBodyPart(item),\n          className: `px-6 py-2 rounded-full font-semibold capitalize transition-all duration-200 ${buttonClass}`,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchExercises, \"kHMBEmI+rzxsYlRp/Rj8SoMCwLA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchExercises;\nexport default SearchExercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchExercises\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/project_fitness_app/src/components/SearchExercises.js"],"names":["React","useEffect","useState","useNavigate","fetchData","exerciseOptions","SearchExercises","setBodyPart","bodyPart","search","setSearch","bodyParts","setBodyParts","allExercises","setAllExercises","suggestions","setSuggestions","navigate","fetchInitialData","bodyPartsData","exercisesData","console","log","length","input","trim","toLowerCase","sorted","filter","ex","name","includes","sort","a","b","aName","bName","aScore","startsWith","bScore","slice","handleSearch","id","alert","handleSuggestionClick","exercise","e","target","value","key","map","item","isActive","buttonClass"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchData, exerciseOptions } from '../utils/fetchData';\n\nconst SearchExercises = ({ setBodyPart, bodyPart }) => {\n  const [search, setSearch] = useState('');\n  const [bodyParts, setBodyParts] = useState([]);\n  const [allExercises, setAllExercises] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      const bodyPartsData = await fetchData(\n        'https://exercisedb.p.rapidapi.com/exercises/bodyPartList',\n        exerciseOptions\n      );\n      const exercisesData = await fetchData(\n        'https://exercisedb.p.rapidapi.com/exercises',\n        exerciseOptions\n      );\n\n      console.log('Exercise count:', exercisesData.length);\n\n      setBodyParts(['all', ...bodyPartsData]);\n      setAllExercises(exercisesData);\n    };\n\n    fetchInitialData();\n  }, [setBodyPart]);\n\n  useEffect(() => {\n    const input = search.trim().toLowerCase();\n    if (!input) {\n      setSuggestions([]);\n      return;\n    }\n\n    const sorted = allExercises\n      .filter((ex) => ex.name.toLowerCase().includes(input))\n      .sort((a, b) => {\n        const aName = a.name.toLowerCase();\n        const bName = b.name.toLowerCase();\n\n        const aScore = aName === input ? 3 : aName.startsWith(input) ? 2 : 1;\n        const bScore = bName === input ? 3 : bName.startsWith(input) ? 2 : 1;\n\n        return bScore - aScore;\n      });\n\n    setSuggestions(sorted.slice(0, 5));\n  }, [search, allExercises]);\n\n  const handleSearch = () => {\n    if (!search.trim()) return;\n\n    if (suggestions.length > 0) {\n      navigate(`/exercise/${suggestions[0].id}`);\n      setSearch('');\n      setSuggestions([]);\n    } else {\n      alert('No matching exercise found.');\n    }\n  };\n\n  const handleSuggestionClick = (exercise) => {\n    navigate(`/exercise/${exercise.id}`);\n    setSearch('');\n    setSuggestions([]);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center px-5 py-8 relative\">\n      <h1 className=\"text-[30px] lg:text-[44px] font-bold text-center mb-12\">\n        Awesome Exercises You <br /> Should Know\n      </h1>\n\n      <div className=\"relative mb-20 w-full max-w-[1170px]\">\n        <input\n          type=\"text\"\n          placeholder=\"Search Exercises\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n          className=\"w-full h-[56px] lg:h-[76px] px-4 pr-[180px] rounded-full border border-gray-300 text-lg font-semibold focus:outline-none\"\n        />\n        <button\n          type=\"button\"\n          onClick={handleSearch}\n          className=\"absolute right-0 top-0 h-[56px] lg:h-[76px] w-[80px] lg:w-[173px] bg-blue-600 text-white text-sm lg:text-lg rounded-r-full hover:bg-blue-700 transition-all\"\n        >\n          Search\n        </button>\n\n        {suggestions.length > 0 && (\n          <ul className=\"absolute z-50 w-full bg-white border border-gray-200 mt-2 rounded-xl max-h-60 overflow-y-auto shadow-lg\">\n            {suggestions.map((exercise) => (\n              <li key={exercise.id}>\n                <button\n                  type=\"button\"\n                  onClick={() => handleSuggestionClick(exercise)}\n                  className=\"w-full text-left px-4 py-3 cursor-pointer hover:bg-blue-100 transition\"\n                >\n                  {exercise.name}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className=\"w-full px-5 flex flex-wrap gap-4 justify-center\">\n        {bodyParts.map((item) => {\n          const isActive = bodyPart === item;\n          const buttonClass = isActive\n            ? 'bg-blue-600 text-white shadow-md'\n            : 'bg-gray-200 text-black hover:bg-blue-100';\n\n          return (\n            <button\n              key={item}\n              type=\"button\"\n              onClick={() => setBodyPart(item)}\n              className={`px-6 py-2 rounded-full font-semibold capitalize transition-all duration-200 ${buttonClass}`}\n            >\n              {item}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchExercises;\n"]},"metadata":{},"sourceType":"module"}